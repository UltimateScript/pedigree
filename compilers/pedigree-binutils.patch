From 6a84cb21f3b851e2c473f55d950b1e25f5d55ffd Mon Sep 17 00:00:00 2001
From: Matthew Iselin <matthew@theiselins.net>
Date: Tue, 7 Mar 2017 11:23:43 -0800
Subject: [PATCH] Add arm-pedigree and x86_64-pedigree to Binutils.

---
 bfd/config.bfd                   | 11 +++++++++++
 config.sub                       |  2 ++
 configure.ac                     |  4 ++--
 gas/configure.tgt                |  2 ++
 ld/Makefile.in                   | 10 ++++++++++
 ld/configure.tgt                 |  2 ++
 ld/emulparams/pedigree_arm.sh    | 35 +++++++++++++++++++++++++++++++++++
 ld/emulparams/pedigree_x86_64.sh | 25 +++++++++++++++++++++++++
 8 files changed, 89 insertions(+), 2 deletions(-)
 create mode 100644 ld/emulparams/pedigree_arm.sh
 create mode 100644 ld/emulparams/pedigree_x86_64.sh

diff --git a/bfd/config.bfd b/bfd/config.bfd
index 1b28016b91..49589ae3fe 100644
--- a/bfd/config.bfd
+++ b/bfd/config.bfd
@@ -413,6 +413,10 @@ case "${targ}" in
     targ_underscore=no
     targ_cflags="-DARM_WINCE -DARM_COFF_BUGFIX"
     ;;
+  arm-*-pedigree*)
+    targ_defvec=arm_elf32_le_vec
+    targ_selvecs=arm_elf32_be_vec
+    ;;
   arm-*-pe*)
     targ_defvec=arm_pe_le_vec
     targ_selvecs="arm_pe_le_vec arm_pe_be_vec arm_pei_le_vec arm_pei_be_vec"
@@ -662,6 +666,12 @@ case "${targ}" in
     esac
     want64=true
     ;;
+#ifdef BFD64
+  amd64-*-pedigree* | x86_64-*-pedigree*)
+    targ_defvec=x86_64_elf64_vec
+    targ_selvecs="i386_elf32_vec iamcu_elf32_vec l1om_elf64_vec k1om_elf64_vec"
+    ;;
+#endif
   x86_64-*-dragonfly*)
     targ_defvec=x86_64_elf64_vec
     targ_selvecs="i386_elf32_vec iamcu_elf32_vec l1om_elf64_vec k1om_elf64_vec"
diff --git a/config.sub b/config.sub
index 70a4180eaf..ac3ca74de8 100755
--- a/config.sub
+++ b/config.sub
@@ -1507,6 +1507,8 @@ case $os in
 		;;
 	ios)
 		;;
+	pedigree*)
+		;;
 	none)
 		;;
 	*-eabi)
diff --git a/configure.ac b/configure.ac
index 3ec86c19df..ce2177286a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1729,7 +1729,7 @@ ACX_ELF_TARGET_IFELSE([# ELF platforms b
   build_lto_plugin=yes
 ],[if test x"$default_enable_lto" = x"yes" ; then
     case $target in
-      *-apple-darwin[[912]]* | *-cygwin* | *-mingw* | *djgpp*) ;;
+      *-apple-darwin[[912]]* | *-cygwin* | *-mingw* | *djgpp* | *pedigree*) ;;
       # On other non-ELF platforms, LTO has yet to be validated.
       *) enable_lto=no ;;
     esac
@@ -1740,7 +1740,7 @@ ACX_ELF_TARGET_IFELSE([# ELF platforms b
   # warn during gcc/ subconfigure; unless you're bootstrapping with
   # -flto it won't be needed until after installation anyway.
     case $target in
-      *-cygwin* | *-mingw* | *-apple-darwin* | *djgpp*) ;;
+      *-cygwin* | *-mingw* | *-apple-darwin* | *djgpp* | *pedigree*) ;;
       *) if test x"$enable_lto" = x"yes"; then
 	AC_MSG_ERROR([LTO support is not enabled for this target.])
         fi
diff --git a/gas/configure.tgt b/gas/configure.tgt
index 711d537e95..dcf750b535 100644
--- a/gas/configure.tgt
+++ b/gas/configure.tgt
@@ -163,6 +163,7 @@ case ${generic_target} in
   arm-*-pe)				fmt=coff em=pe ;;
   arm-*-riscix*)			fmt=aout em=riscix ;;
   arm-*-fuchsia*)			fmt=elf ;;
+  arm-*-pedigree*)		fmt=elf ;;
 
   avr-*-*)				fmt=elf bfd_gas=yes ;;
 
@@ -288,6 +289,7 @@ case ${generic_target} in
   i386-*-chaos)				fmt=elf ;;
   i386-*-rdos*)				fmt=elf ;;
   i386-*-darwin*)			fmt=macho ;;
+  i386-*-pedigree*)		fmt=elf ;;
 
   i860-*-*)				fmt=elf endian=little ;;
 
diff --git a/ld/Makefile.in b/ld/Makefile.in
index 042b690ed6..96e89611f3 100644
--- a/ld/Makefile.in
+++ b/ld/Makefile.in
@@ -754,6 +754,8 @@ ALL_EMULATION_SOURCES = \
 	enios2linux.c \
 	epc532macha.c \
 	epdp11.c \
+	epedigree_arm.c \
+	epedigree_x86_64.c \
 	epjelf.c \
 	epjlelf.c \
 	eppclynx.c \
@@ -1456,6 +1458,8 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ens32knbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epc532macha.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epdp11.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epedigree_arm.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epedigree_x86_64.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epjlelf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eppclynx.Po@am__quote@
diff --git a/ld/configure.tgt b/ld/configure.tgt
index b85c6bb35a..de67ac7304 100644
--- a/ld/configure.tgt
+++ b/ld/configure.tgt
@@ -143,6 +143,8 @@ arm-*-netbsdelf*)	targ_emul=armelf_nbsd;
 			;;
 arm-*-nto*)		targ_emul=armnto
 			;;
+arm-*-pedigree*)	targ_emul=pedigree_arm
+			;;
 arm-*-phoenix*)		targ_emul=armelf
 			;;
 armeb-*-elf | armeb-*-eabi*)
@@ -917,6 +919,8 @@ x86_64-*-rdos*)		targ_emul=elf64rdos
 			;;
 x86_64-*-cloudabi*)	targ_emul=elf_x86_64_cloudabi
 			;;
+x86_64-*-pedigree*)	targ_emul=pedigree_x86_64 targ_extra_emuls="elf_i386"
+			;;
 x86_64-*-linux-gnux32)	targ_emul=elf32_x86_64
 			targ_extra_emuls="elf_x86_64 elf_i386 elf_iamcu elf_l1om elf_k1om"
 			targ_extra_libpath="elf_i386 elf_iamcu elf_x86_64 elf_l1om elf_k1om"
diff --git a/ld/emulparams/pedigree_arm.sh b/ld/emulparams/pedigree_arm.sh
new file mode 100644
index 0000000000..ca443ce0e3
--- /dev/null
+++ b/ld/emulparams/pedigree_arm.sh
@@ -0,0 +1,35 @@
+MACHINE=
+SCRIPT_NAME=elf
+OUTPUT_FORMAT="elf32-littlearm"
+BIG_OUTPUT_FORMAT="elf32-bigarm"
+LITTLE_OUTPUT_FORMAT="elf32-littlearm"
+TEXT_START_ADDR=0x8000
+TEMPLATE_NAME=elf32
+EXTRA_EM_FILE=armelf
+OTHER_TEXT_SECTIONS='*(.glue_7t) *(.glue_7) *(.vfp11_veneer) *(.v4_bx)'
+OTHER_BSS_SYMBOLS='__bss_start__ = .;'
+OTHER_BSS_END_SYMBOLS='_bss_end__ = . ; __bss_end__ = . ;'
+OTHER_END_SYMBOLS='__end__ = . ;'
+OTHER_SECTIONS='.note.gnu.arm.ident 0 : { KEEP (*(.note.gnu.arm.ident)) }'
+ATTRS_SECTIONS='.ARM.attributes 0 : { KEEP (*(.ARM.attributes)) KEEP (*(.gnu.attributes)) }'
+OTHER_READONLY_SECTIONS="
+  .ARM.extab ${RELOCATING-0} : { *(.ARM.extab${RELOCATING+* .gnu.linkonce.armextab.*}) }
+  ${RELOCATING+ PROVIDE_HIDDEN (__exidx_start = .); }
+  .ARM.exidx ${RELOCATING-0} : { *(.ARM.exidx${RELOCATING+* .gnu.linkonce.armexidx.*}) }
+  ${RELOCATING+ PROVIDE_HIDDEN (__exidx_end = .); }"
+
+DATA_START_SYMBOLS='__data_start = . ;';
+
+GENERATE_SHLIB_SCRIPT=yes
+
+ARCH=arm
+MACHINE=
+MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
+ENTRY=_start
+EMBEDDED=yes
+
+# This sets the stack to the top of the simulator memory (2^19 bytes).
+STACK_ADDR=0x80000
+
+# ARM does not support .s* sections.
+NO_SMALL_DATA=yes
\ No newline at end of file
diff --git a/ld/emulparams/pedigree_x86_64.sh b/ld/emulparams/pedigree_x86_64.sh
new file mode 100644
index 0000000000..2a7005c34b
--- /dev/null
+++ b/ld/emulparams/pedigree_x86_64.sh
@@ -0,0 +1,25 @@
+. ${srcdir}/emulparams/plt_unwind.sh
+SCRIPT_NAME=elf
+ELFSIZE=64
+OUTPUT_FORMAT="elf64-x86-64"
+NO_REL_RELOCS=yes
+TEXT_START_ADDR=0x400000
+MAXPAGESIZE="CONSTANT (MAXPAGESIZE)"
+COMMONPAGESIZE="CONSTANT (COMMONPAGESIZE)"
+ARCH="i386:x86-64"
+MACHINE=
+TEMPLATE_NAME=elf32
+GENERATE_SHLIB_SCRIPT=yes
+GENERATE_PIE_SCRIPT=yes
+NO_SMALL_DATA=yes
+LARGE_SECTIONS=yes
+LARGE_BSS_AFTER_BSS=
+SEPARATE_GOTPLT="SIZEOF (.got.plt) >= 24 ? 24 : 0"
+IREL_IN_PLT=
+
+if [ "x${host}" = "x${target}" ]; then
+  case " $EMULATION_LIBPATH " in
+    *" ${EMULATION_NAME} "*)
+      NATIVE=yes
+  esac
+fi
\ No newline at end of file
-- 
2.12.0.rc1.440.g5b76565f74-goog

