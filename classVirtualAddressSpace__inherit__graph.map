<map id="VirtualAddressSpace" name="VirtualAddressSpace">
<area shape="rect" id="node2" href="$classArm926EVirtualAddressSpace.html" title="{Arm926EVirtualAddressSpace\n|&#45; PACKED\l&#45; PACKED\l&#45; PACKED\l&#45; m_PhysicalPageDirectory\l&#45; m_VirtualPageDirectory\l&#45; m_VirtualPageTables\l&#45; m_KernelSpace\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ freeStack()\l+ mapPageStructures()\l+ clone()\l+ revertToKernelAddressSpace()\l# ~Arm926EVirtualAddressSpace()\l&#45; Arm926EVirtualAddressSpace()\l&#45; Arm926EVirtualAddressSpace()\l&#45; Arm926EVirtualAddressSpace()\l&#45; operator=()\l&#45; initialise()\l&#45; getPageTableEntry()\l&#45; toFlags()\l&#45; fromFlags()\l}" alt="" coords="5,673,231,1117"/>
<area shape="rect" id="node3" href="$classArmV7VirtualAddressSpace.html" title="{ArmV7VirtualAddressSpace\n|&#45; PACKED\l&#45; PACKED\l&#45; m_PhysicalPageDirectory\l&#45; m_VirtualPageDirectory\l&#45; m_VirtualPageTables\l&#45; m_pStackTop\l&#45; m_freeStacks\l&#45; m_Lock\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ allocateStack()\l+ freeStack()\l+ memIsInHeap()\land 15 more...\l# ~ArmV7VirtualAddressSpace()\l# ArmV7VirtualAddressSpace()\l# doIsMapped()\l# doMap()\l# doGetMapping()\l# doSetFlags()\l# doUnmap()\l# doAllocateStack()\l&#45; ArmV7VirtualAddressSpace()\l&#45; ArmV7VirtualAddressSpace()\l&#45; ArmV7VirtualAddressSpace()\l&#45; operator=()\l&#45; initialise()\l&#45; getPageTableEntry()\l&#45; toFlags()\l&#45; fromFlags()\l}" alt="" coords="254,615,465,1176"/>
<area shape="rect" id="node5" href="$classHostedVirtualAddressSpace.html" title="{HostedVirtualAddressSpace\n|&#45; m_pStackTop\l&#45; m_freeStacks\l&#45; m_bKernelSpace\l&#45; m_Lock\l&#45; m_pKnownMaps\l&#45; m_KnownMapsSize\l&#45; m_numKnownMaps\l&#45; m_nLastUnmap\l&#45; m_KernelSpace\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ allocateStack()\l+ freeStack()\l+ memIsInHeap()\land 17 more...\l&#45; HostedVirtualAddressSpace()\l&#45; HostedVirtualAddressSpace()\l&#45; HostedVirtualAddressSpace()\l&#45; operator=()\l&#45; toFlags()\l&#45; fromFlags()\l&#45; doAllocateStack()\l&#45; switchAddressSpace()\l}" alt="" coords="489,666,691,1125"/>
<area shape="rect" id="node6" href="$classMIPS32VirtualAddressSpace.html" title="{MIPS32VirtualAddressSpace\n|&#45; m_pKusegDirectory\l&#45; m_pKseg2Directory\l&#45; m_KernelSpace\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ freeStack()\l+ getPageTableChunk()\l# ~MIPS32VirtualAddressSpace()\l&#45; MIPS32VirtualAddressSpace()\l&#45; MIPS32VirtualAddressSpace()\l&#45; operator=()\l&#45; setPageTableChunk()\l&#45; generateNullChunk()\l}" alt="" coords="715,739,934,1051"/>
<area shape="rect" id="node7" href="$classPPC32VirtualAddressSpace.html" title="{PPC32VirtualAddressSpace\n|+ m_Vsid\l&#45; m_pPageDirectory\l&#45; m_KernelSpace\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ freeStack()\l+ clone()\l+ revertToKernelAddressSpace()\l+ PPC32VirtualAddressSpace()\l# ~PPC32VirtualAddressSpace()\l&#45; PPC32VirtualAddressSpace()\l&#45; operator=()\l&#45; initialise()\l&#45; initialRoster()\l}" alt="" coords="958,732,1171,1059"/>
<area shape="rect" id="node8" href="$classX64VirtualAddressSpace.html" title="{X64VirtualAddressSpace\n|&#45; m_PhysicalPML4\l&#45; m_pStackTop\l&#45; m_freeStacks\l&#45; m_bKernelSpace\l&#45; m_Lock\l&#45; m_StacksLock\l&#45; m_KernelSpace\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ mapHuge()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ allocateStack()\l+ freeStack()\land 22 more...\l&#45; X64VirtualAddressSpace()\l&#45; X64VirtualAddressSpace()\l&#45; X64VirtualAddressSpace()\l&#45; operator=()\l&#45; getPageTableEntry()\l&#45; maybeFreeTables()\l&#45; toFlags()\l&#45; fromFlags()\l&#45; conditionalTableEntryAllocation()\l&#45; conditionalTableEntryMapping()\l&#45; mapUnlocked()\l&#45; unmapUnlocked()\l&#45; doAllocateStack()\l}" alt="" coords="1196,644,1416,1147"/>
<area shape="rect" id="node9" href="$classX86VirtualAddressSpace.html" title="{X86VirtualAddressSpace\n|&#45; m_PhysicalPageDirectory\l&#45; m_VirtualPageDirectory\l&#45; m_VirtualPageTables\l&#45; m_pStackTop\l&#45; m_freeStacks\l&#45; m_Lock\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ allocateStack()\l+ freeStack()\l+ memIsInHeap()\land 11 more...\l+ initialise()\l# X86VirtualAddressSpace()\l# doIsMapped()\l# doMap()\l# doGetMapping()\l# doSetFlags()\l# doUnmap()\l# doAllocateStack()\l&#45; X86VirtualAddressSpace()\l&#45; X86VirtualAddressSpace()\l&#45; operator=()\l&#45; getPageTableEntry()\l&#45; toFlags()\l&#45; fromFlags()\l&#45; beginCrossSpace()\l&#45; mapCrossSpace()\l&#45; endCrossSpace()\l}" alt="" coords="1441,622,1627,1169"/>
<area shape="rect" id="node4" href="$classArmV7KernelVirtualAddressSpace.html" title="{ArmV7KernelVirtualAddress\lSpace\n|&#45; m_Instance\l|+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ initialiseKernelAddressSpace()\l&#45; ArmV7KernelVirtualAddress\lSpace()\l&#45; ~ArmV7KernelVirtualAddress\lSpace()\l&#45; ArmV7KernelVirtualAddress\lSpace()\l&#45; operator=()\l}" alt="" coords="254,1224,465,1492"/>
<area shape="rect" id="node10" href="$classX86KernelVirtualAddressSpace.html" title="{X86KernelVirtualAddressSpace\n|&#45; m_Instance\l|+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l&#45; X86KernelVirtualAddressSpace()\l&#45; ~X86KernelVirtualAddress\lSpace()\l&#45; X86KernelVirtualAddressSpace()\l&#45; operator=()\l}" alt="" coords="1424,1246,1644,1470"/>
</map>
