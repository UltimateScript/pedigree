<map id="X86KernelVirtualAddressSpace" name="X86KernelVirtualAddressSpace">
<area shape="rect" id="node2" href="$classX86VirtualAddressSpace.html" title="{X86VirtualAddressSpace\n|&#45; m_PhysicalPageDirectory\l&#45; m_VirtualPageDirectory\l&#45; m_VirtualPageTables\l&#45; m_pStackTop\l&#45; m_freeStacks\l&#45; m_Lock\l|+ isAddressValid()\l+ isMapped()\l+ map()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ allocateStack()\l+ freeStack()\l+ memIsInHeap()\land 11 more...\l+ initialise()\l# X86VirtualAddressSpace()\l# doIsMapped()\l# doMap()\l# doGetMapping()\l# doSetFlags()\l# doUnmap()\l# doAllocateStack()\l&#45; X86VirtualAddressSpace()\l&#45; X86VirtualAddressSpace()\l&#45; operator=()\l&#45; getPageTableEntry()\l&#45; toFlags()\l&#45; fromFlags()\l&#45; beginCrossSpace()\l&#45; mapCrossSpace()\l&#45; endCrossSpace()\l}" alt="" coords="22,615,209,1161"/>
<area shape="rect" id="node3" href="$classVirtualAddressSpace.html" title="{VirtualAddressSpace\n|+ m_Heap\l+ m_HeapEnd\l+ KernelMode\l+ Write\l+ Execute\l+ WriteThrough\l+ CacheDisable\l+ CopyOnWrite\l+ Swapped\l+ MemoryCoherent\l+ Guarded\l+ Shared\l+ WriteCombine\l+ Accessed\l+ Dirty\l+ ClearDirty\l+ m_ZeroPage\l|+ expandHeap()\l+ isAddressValid()\l+ isMapped()\l+ map()\l+ mapHuge()\l+ getMapping()\l+ setFlags()\l+ unmap()\l+ allocateStack()\l+ allocateStack()\land 22 more...\l+ getKernelAddressSpace()\l+ create()\l# VirtualAddressSpace()\l&#45; VirtualAddressSpace()\l&#45; VirtualAddressSpace()\l&#45; operator=()\l&#45; rollbackHeapExpansion()\l}" alt="" coords="24,5,207,567"/>
</map>
